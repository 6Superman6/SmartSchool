 

 

 

 

 

校园帮

异步数据接口文档

 

 

 

 

约定：

\1.   默认权限为需要登录

\2.   返回统一为json数据，格式为：{status:xxx.msg:xxx.list:xxx}

\3.   status和msg为ajax默认返回内容


 

# 一、登录注册（用户人员表）-------user表

后端有一个登录拦截器，前端每次访问后端一个路径（除了注册以外），都要经过登录拦截器的处理，避免用户在不登录的情况下通过并接请求直接访问App

HttpSession session = httpServletRequest.getSession();

**if** ( session.getAttribute(**"LOGIN_USER"**) != **null** ){

**return true**;          //说明已经登陆了

}**else** {

httpServletResponse.sendRedirect(httpServletRequest.getContextPath() + **"/user/dologin"**);

**return false**;           //return false,转到登录页面

}

所以说已经登陆情况下，session需放入一个属性LOGIN_USER (setAttribute)，后端根据它来判断


 

**1.****用户注册**

URL: 106.12.189.19/user/register

请求方式：POST

请求参数样例：{

"uid":"201702505248",                                //账号(学/工) 主键

"upsd":"nichaoge",                                       //密码

"uname":"chao",                                           //姓名

"uemail":"465445097@qq.com",                 //邮箱

"utel":"15621153666",                                 //手机号

"udept":"信息工程学院",                            //学院

"ugrade" : 0                                                  //备注：用户注册时选择自己的身份，例如学生、老师、维修人员，若用户选择学生或老师，则传过来的Ugrade为0，若选择维修人员则Ugrade为 1，先默认只有一个管理员，管理员权限为2，系统自己分配一个管理员账号，所以说管理员不需要注册。 

}

 

ugrade为权限，权限分为为0,1,2。0为教师或者学生，1为维修人员，2为管理员。不同权限对应的功能是不一样的。

 

成功返回样例： 

{

"status" : 0,

"msg" : "注册成功"

}

 

失败信息：

| status | msg          |
| ------ | ------------ |
| -1     | 账号已经存在 |
| -2     | 缺少参数     |

 

 

 

 

**2.****用户登录**

URL: 106.12.189.19/user/login

请求方式：POST

请求参数样例：

{

"uid":"XXXXXX",                               //账号(学/工)

"upsd":"XXXXXX"，                         //密码

“autoLogin” : true/false                        //autoLogin代表自动登录，用户自己选择，true代表选择自动登录，false代表不选择自动登录

//autoLogin默认值为false

}

 

成功返回样例：

{

"status" : 0,

"msg" : "登录成功",

"data" : {

"uid":"XXXXXX",                               //账号(学/工)

"ugrade" : 0                                           //权限，此时为老师或学生

"uname":"chao",                                    //姓名

"uemail":"465445097@qq.com",          //邮箱

"utel":"15621153666",                          //手机号

"udept":"信息工程学院",                     //学院

}

 

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 账号或密码错误 |
| -2     | 缺少参数       |


 

**3.****自动登录**

URL: 106.12.189.19/user/login/auto

请求方式：POST

请求参数样例**：**无

成功返回样例：

{

"status" : 0,

"msg" : "登录成功",

"data" : {

"uid":"XXXXXX",                        //账号(学/工)

"ugrade" : 0                                           //权限，此时为老师或学生

"uname":"chao",                           //姓名

"uemail":"465445097@qq.com",          //邮箱

"utel":"15621153666",                       //手机号

"udept":"信息工程学院",                //学院

}

}

 

失败信息：

| status | msg      |
| ------ | -------- |
| -1     | 登录失败 |
| -2     | 缺少参数 |

 

**4.****退出登录**

URL:106.12.189.19/user/logout

请求方式：POST

请求参数样例**：**无

成功返回样例:

{

"status" : 0,

"msg" : "退出登录成功"

}

失败信息：无

**5.****修改信息**

URL: 106.12.189.19/user/update

请求方式：POST

请求参数样例：

{

"uid":"201702505248", //不可修改，使用隐藏域

"upsd":"nichaoge", //密码

"uname":"liuchao", //姓名

"uemail":"465445097@qq.com", //邮箱

"utel":"15621153978", //手机号

"udept":"信息工程学院", //学院

“uimage”:"*******" //头像图片传名称后端只在负责在数据库存名称

//原信息在表单中已存在

}

成功返回样例:

{

"status" : 0,

"msg" : "修改成功"

}

失败信息：

| status | msg          |
| ------ | ------------ |
| -1     | 未发生改变   |
| -2     | 缺少参数     |
| -3     | 该账号不存在 |

 


 

# 二、设备故障报备（报备表）------record表

**1.****添加一条故障信息**

URL: 106.12.189.19/**record/insertTo**

请求方式：POST

请求参数样例：

{

"ruid" : "201702505248"                         //报备人员(账号)

"rdate" : "报备时间",

"radr" : "教室地点",

"rtype" : "设备类型",

"wstatic" : "待维修",                                    //两种状态：已维修/待维修，Wstatic的默认值为待维修，用户不需要填写，但必须传过来“待维修”，因为新创建设备故障表还在等在维修

"rdes" : "详细描述"                              //必填选项，用户需要在该输入框中详细描述设备故障信息。

"image" : "图片地址"                            /用户必须上传图片,image代表图片的存放地址

}

成功返回样例： 

{

"status" : 0,

"msg" : "报备数据添加成功"

}

失败信息：

| status | msg                |
| ------ | ------------------ |
| -1     | 报备失败，数据有误 |
| -2     | 报备人员账号不存在 |
| -3     | 该数据已存在       |

**2.****修改故障信息****---****用户（自己发的自己才能修改）**

URL: 106.12.189.19/**record/updateTo**

请求方式：POST

请求参数样例：

{     //通过编号--主键 来修改信息（Radr、Rtype、Rdes、image）

"rid" : "报备编号",                                    //主键，数据库自动生成

"radr" : "教室地点", 

"rtype" : "设备类型",

"rdes" : "详细描述"      //必填选项，用户需要在该输入框中详细描述设备故障信息。

"image" : "图片地址"               //修改图片地址

}

 

成功返回样例： 

{

"status" : 0,

"msg" : "更新成功"

}

失败信息：

| status | msg                                    |
| ------ | -------------------------------------- |
| -1     | 更新出错                               |
| -2     | 新数据和原来的数据一样，请重新输入数据 |


 

**3.****删除故障信息****---****用户****/****维修人员**

URL: 106.12.189.19/**record/deleteTo**

请求方式：POST

请求参数样例：

{    //通过编号--主键 来删除信息

"rid" : "报备编号"            //主键，数据库自动生成

}

成功返回样例： 

{

"status" : 0,

"msg" : "删除成功"

}

失败信息：

| status | msg                      |
| ------ | ------------------------ |
| -1     | 删除失败，报备编号不存在 |


 

**4.****查看报备表中的故障信息****---****维修人员**

URLs: 106.12.189.19/**record/rmess**

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询故障信息成功，信息如下",

"list" : [                //list是一个集合 List<Record> list ，**list****可能为空**

 

{

"rid" : "报备编号",

"ruid" : "报备人员(账号)",

"utel":"15621153978",                   //报备人员手机号----Ruid是外键，通过数据库连接获得，所在用户人员表---Uid

"rdate" : "报备时间",

"radr" : "教室地点",

"rtype" : "设备类型",

"rdes" : "详细描述信息",

"wstatic" : "待维修/已维修"          //维修状态

“image” : "图片地址"                    //根据图片地址显示图片

}

]

}

失败信息： 

| status | msg            |
| ------ | -------------- |
| -1     | 无设备故障信息 |


 

**5.****修改报备表中的故障维修信息（维修）****---****维修人员**

URL: 106.12.189.19/**record/delByW**

请求方式：POST

请求参数样例：s

{    //通过编号--主键 来修改信息

"rid" : "报备编号",                  //主键，自动生成

"wid" : "维修人员(账号)",     //wid为外键，所在表为user表

"wstatic" : "已维修",

"wdate" : "维修时间"

}

 

成功返回样例： 

{

"status" : 0,

"msg" : "维修成功"

}

失败信息：

| status | msg                |
| ------ | ------------------ |
| -1     | 维修失败           |
| -2     | 请输入新的维修信息 |
| -3     | 维修人员账号不存在 |


 

**6.****报备人员查看自己发布的报备信息**

URL: 106.12.189.19/**record/rmessmy**

请求方式：POST

请求参数样例：

{ 

"ruid":"201702"                       //报备人员的编号（账号），其外建是user表中的Uid

}

成功返回样例：

{

"status" : 0,

"msg" : "查询报备信息成功，信息如下",

"list" : [                //list是一个集合 List<Record> list ，**list****可能为空**

{

"rid" : "报备编号",                  //主键

"ruid" : "报备人员(账号)",

"utel":"15621153978",                   //报备人员手机号----Ruid是外键，通过数据库连接获得，所在用户人员表---Uid

"rdate" : "报备时间",

"radr" : "教室地点",

"rtype" : "设备类型",

"rdes" : "详细描述信息",

"wid" : "维修人员编号"         //如果没有维修人员维修则显示为空

"wstatic" : "待维修/已维修"   //维修状态

"wdate" : "维修时间"              //如果没有维修时间则显示为空

“image” : "图片地址"             //根据图片地址显示图片

}

]

}

失败信息： 

| status | msg            |
| ------ | -------------- |
| -1     | 无设备故障信息 |

 

 

**7.****维修人员查看已维修的报备信息**

URL: 106.12.189.19/**record/wymessmy**

请求方式：POST

请求参数样例：

{ 

"wid":"T12301" //维修人员的编号（账号），其外建是user表中的Uid

}

成功返回样例：

{

"status" : 0,

"msg" : "查询已维修信息成功，信息如下",

"list" : [                //list是一个集合 List<Record> list ，**list****可能为空****s**

{

"rid" : "报备编号",                  //主键

"ruid" : "报备人员(账号)",

"utel":"15621153978",                   //报备人员手机号----Ruid是外键，通过数据库连接获得，所在用户人员表---Uid

"rdate" : "报备时间",

"radr" : "教室地点",

"rtype" : "设备类型",

"rdes" : "详细描述信息",

"wid" : "维修人员编号"         //如果没有维修人员维修则显示为空

"wstatic" : "已维修"                //维修状态

"wdate" : "维修时间"             //如果没有维修时间则显示为空

“image” : "图片地址"             //根据图片地址显示图片

}

]

}

失败信息： 

| status | msg          |
| ------ | ------------ |
| -1     | 无已维修信息 |

 

 

**8.****维修人员查看待维修的报备信息**

URL: 106.12.189.19/**record/wwmessmy**

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询待维修信息成功，信息如下",

"list" : [                //list是一个集合 List<Record> list ，**list****可能为空**

{

"rid" : "报备编号",                  //主键

"ruid" : "报备人员(账号)",

"utel":"15621153978",                   //报备人员手机号----Ruid是外键，通过数据库连接获得，所在用户人员表---Uid

"rdate" : "报备时间",

"radr" : "教室地点",

"rtype" : "设备类型",

"rdes" : "详细描述信息",

"wid" : "维修人员编号"         //如果没有维修人员维修则显示为空

"wstatic" : "待维修"                //维修状态

"wdate" : "维修时间"               //如果没有维修时间则显示为空

“image” : "图片地址"             //根据图片地址显示图片

}

]

}

失败信息： 

| status | msg          |
| ------ | ------------ |
| -1     | 无待维修信息 |


 

# 三、失物招领通告（失物提供表）-----lostfound表

**1****、添加一条记录信息** **不区分失主得主**

URL: 106.12.189.19/**lf/testInsertTo**

请求方式：POST

请求参数样例：

{

"des" : "物品名称及相关信息",

"time" : "丢失时间",

"uid" : "失主账号",          //uid是外键-------user表中的Uid

"lflag" : "失主",                       //类别：有两个：失主/得主，根据系统判断是失主还是得主

"lstatic" : "未解决",                        //状态：已解决/未解决，失主找到物品或得主找到失主为已解决，否则为未解决

"image" : "图片地址"         //用户必须上传图片

}

成功返回样例： 

{

"status" : 0,

"msg" : "数据添加成功"

}

失败信息：

| status | msg                      |
| ------ | ------------------------ |
| -1     | 添加失败                 |
| -2     | 人员账号不存在           |
| -3     | 该数据已存在不要重复添加 |


 

**2****、修改一条失物或拾物招领信息****---****因为有可能是得主修改或失主修改**

URL: 106.12.189.19/**lf/testUpdateTo**

请求方式：POST

请求参数样例：参数不定，可以为一下任意的参数组合

{    //通过编号--主键 来修改信息

"id" : "物品编号",            //主键，数据库自动生成

"des" : "物品名称及相关信息",

"time" : "丢失时间",

"lstatic" : "已解决",                 //状态：已解决/未解决，失主找到物品或得主找到失主为已解决，否则为未解决

"image" : "图片地址"

}

成功返回样例： 

{

"status" : 0,

"msg" : "数据更新成功"

}

失败信息：

| status | msg                      |
| ------ | ------------------------ |
| -1     | 更新出错                 |
| -2     | 人员账号不存在           |
| -3     | 数据没有发生变化重新输入 |

 

**3****、删除一条信息记录** **（不区分得主失主）**

URL: 106.12.189.19/**lf/testDeleteTo**

请求方式：POST

请求参数样例：

{    //通过编号--主键 来修改信息

"id" : "物品编号",                   //主键，数据库自动生成

}

成功返回样例： 

{

"status" : 0,

"msg" : "删除成功"

}

失败信息：

| status | msg                |
| ------ | ------------------ |
| -1     | 删除失败数据不存在 |

 

**4****、查看所有失物招领信息****----****所有用户（此时****Type****为失主****)**

URL: 106.12.189.19/**lf/testAllLost**

请求方式：POST

请求参数样例：{

​       ‘失主’

}

成功返回样例：

{

"status" : 0,

"msg" : "查询失物信息成功如下表",

"list" : [                //list是一个集合 List<Lostfound> list ，**list****可能为空**

{

"id" : "物品编号",                   //主键，数据库自动生成

"des" : "物品名称及相关信息",

"time" : "丢失时间",

"uid" : "失主账号",                 //uid是外键-------user表中的Uid

"Utel" : "15621153978"                 //失主手机号----uid是外键，通过数据库连接获得，所在用户人员表----Uid

"lstatic" : "未解决/未解决",    //状态：已解决/未解决，失主找到物品s或得主找到失主为已解决，否则为未解决

"image" : "图片地址"

 

}

]

}

失败信息：

| status | msg        |
| ------ | ---------- |
| -1     | 无失物信息 |

 

**5****、查看所有失物提供信息****----****所有用户（此时****Type****为得主****)**

URL: 106.12.189.19/**lf/testAllFound**

请求方式：POST

请求参数样例：{

​       ‘得主’

}

成功返回样例：

{

"status" : 0,

"msg" : "查询捡到信息成功如下表",

"list" : [                //list是一个集合 List<Lostfound> list ，**list****可能为空**

{

"id" : "物品编号",              //主键，数据库自动生成

"des" : "物品名称及相关信息",

"time" : "捡到时间",

"uid" : "得主账号",          //uid是外键-------user表中的Uid

"Utel" : "15621153978"   //失主手机号----uid是外键，通过数据库连接获得，所在用户人员表---Uid

"lstatic" : "未解决/未解决",    //状态：已解决/未解决，失主找到物品或得主找到失主为已解决，否则为未解决

"image" : "图片地址"

}

]

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 无捡到物品信息 |

 

 

**6****、用户查看自己发布的信息**

URL: 106.12.189.19/lf/testAllThing

请求方式：POST

请求参数样例：

{

"uid" : "201701"

}

成功返回样例：

{

"status" : 0,

"msg" : "查询捡到信息成功如下表',

"list" : [               //list是一个集合 List<Lostfound> list，list可能为空

{

"id" : "物品编号",                     //主键，数据库自动生成

"des" : "物品名称及相关信息",

"time" : "捡到时间",

"uid" : "得主账号",                 //uid是外键-------user表中的Uid

"lstatic" : "未解决/未解决",  //状态：已解决/未解决，失主找到物品或得主找到失主为已解决，否则为未解决

"image" : "图片地址"

}

]

}

 

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 无捡到物品信息 |

 

# 四、二手交易信息提供（二手交易表）-------trade表

**只提供卖家信息，不提供线上交易，用户获取货物信息后可进行线下交易，本系统仅提供二手物品信息平台**

**1****、添加一条二手物品信息****------****所有用户**

```
       URL: 106.12.189.19/trade/insertTo
```

请求方式：POST

请求参数样例：

{

"tdes" : "二手物品名称及物品描述",

"tuid" : "卖主账号",         //tuid是外键，所在用户人员表---Uid

"tprice" : "价格"               //要求保留一位小数

"image" : "图片地址"       //用户必须上传图片,image代表图片的存放地址

}

成功返回样例： 

{

"status" : 0,

"msg" : "添加成功"

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 添加失败       |
| -2     | 该数据已存在   |
| -3     | 卖家账号不存在 |

 

**2****、修改一条二手物品信息****------****所有用户（物品提供者才可修改）**

```
       URL: 106.12.189.19/trade/updateTo
```

请求方式：POST

请求参数样例：

{    //通过编号--主键 来修改信息

"tid" : "交易编号",                         //主键，数据库自动生成

"tdes" : "二手物品名称及物品描述",

"tprice" : "价格"                             //要求保留一位小数

"image" : "图片地址"               //用户必须上传图片

}

}

成功返回样例： 

{

"status" : 0,

"msg" : "修改成功"

}

失败信息：

| status | msg                |
| ------ | ------------------ |
| -1     | 修改失败           |
| -2     | 请输入新的物品信息 |

 

**3****、删除一条二手物品信息****------****所有用户（物品提供者才可删除）**

```
URL: 106.12.189.19/trade/deleteTo
```

请求方式：POST

请求参数样例：

{    //通过编号--主键 来删除信息

"tid" : "交易编号",           //主键，数据库自动生成

}

成功返回样例： 

{

"status" : 0,

"msg" : "删除成功"

}

失败信息：

| status | msg                      |
| ------ | ------------------------ |
| -1     | 删除失败，交易编号不存在 |

 

**4****、查看所有二手物品信息****------****所有用户**

```
URL: 106.12.189.19/trade/rmess
```

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询成功，所有二手物品信息如下",

"list" : [                       //list是一个集合 List<Trade> list ，**list****可能为空**

{

"tid" : "交易编号",                   //主键，数据库自动生成

"tdes" : "二手物品名称及物品描述",

"tuid" : "卖主账号",                //tuid是外键，所在用户人员表---Uid

"utel" : "15621153978"                  //卖家手机号----由于Tuid是外键，所在表为用户人员表----Uid，所以卖家手机号通过数据库连接查询获得

"tprice" : "价格"                      //保留一位小数

"image" : "图片地址" 

}

]

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 无二手物品信息 |

 

 

**5****、查看自己发布的二手物品信息****------****卖家**

```
URL: 106.12.189.19/trade/rmessmy
```

请求方式：POST

请求参数样例：

{ 

"tuid" : "卖主账号", 

}

成功返回样例：

{

"status" : 0,

"msg" : "查询成功，所有二手物品信息如下",

"list" : [                //list是一个集合 List<Trade> list ，**list****可能为空**

{

"tid" : "交易编号",                         //主键，数据库自动生成

"tdes" : "二手物品名称及物品描述",

"tuid" : "卖主账号",                       //tuid是外键，所在用户人员表---Uid

"utel" : "15621153978"                   //卖家手机号----由于Tuid是外键，所在表为用户人员表----Uid，所以卖家手机号通过数据库连接查询获得

"tprice" : "价格"                             //保留一位小数

"image" : "图片地址" 

}

]

}

失败信息： 

| status | msg            |
| ------ | -------------- |
| -1     | 无二手物品信息 |

 

 

# 五、各大考试报名途径-----考试通告（考试通知表）---testtell表

**1****、添加一条考试通知****-----****管理员**

URL: 106.12.189.19/testtell/insertTell

请求方式：POST

请求参数样例：

{

"testName" : "考试名称",

"testDate" : "考试时间",

"testArea" : "考试地点"

"image" : "图片地址"                     //必须上传图片

}

成功返回样例： 

{

"status" : 0,

"msg" : "添加成功"

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 添加失败       |
| -2     | 该考试已经存在 |

 

**2****、修改一条考试通知****------****管理员**

URL: 106.12.189.19/testtell/updateTell

请求方式：POST

请求参数样例：

{    //通过编号--主键 来修改信息

"testId" : "考试编号",             //主键，数据库自动生成

"testName" : "考试名称",

"testDate" : "考试时间",

"testArea" : "考试地点"

"image" : "相关图片地址" 

}

成功返回样例： 

{

"status" : 0,

"msg" : "修改成功"

}

失败信息：

| status | msg                    |
| ------ | ---------------------- |
| -1     | 修改失败               |
| -2     | 修改失败，该考试已存在 |

 

**3****、删除一条考试通知****------****管理员**

URL:  106.12.189.19/testtell/deleteTell

请求方式：POST

请求参数样例：

{

"testId" : "考试编号"              //主键，数据库自动生成

}

成功返回样例： 

{

"status" : 0,

"msg" : "删除成功"

}

失败信息：

| status | msg                        |
| ------ | -------------------------- |
| -1     | 删除失败，该考试编号不存在 |

 

**4****、查看所有考试通知****------****所有用户**

URL: 106.12.189.19/testtell/checkTell

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询成功，所有考试通知信息如下",

"list" : [                       //list是一个集合 List<Testtell> list，list可能为空

{

"testId" : "考试编号",             //主键，数据库自动生成

"testName" : "考试名称",

"testDate" : "考试时间",

"testArea" : "考试地点"

"image" : "相关图片地址" 

}

]

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 无考试通知信息 |

 

# 六、各大考试报名途径-----报名入口（考试安排表）--test表

**1****、添加一条考试****-----****管理员**

URL: 106.12.189.19/test/insertTest

请求方式：POST

请求参数样例：

{

"Tname" : "考试名称",

"Turl" : "考试报名网址"

"Tcollege":"学院"

}

成功返回样例： 

{

"status" : 0,

"msg" : "添加成功"

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 添加失败       |
| -2     | 该考试已经存在 |

 

**2****、修改一条考试****-----****管理员**

URL: 106.12.189.19/test/updateTest

请求方式：POST

请求参数样例：

{    //通过编号--主键 来修改信息

" Tid" : "考试编号"           //主键，数据库自动生成

"Tname" : "考试名称",

"Turl" : "考试报名网址"         //报名网址不是一成不变的，管理员可以根据需要修改

"Tcollege" : "学院"

}

成功返回样例： 

{

"status" : 0,

"msg" : "修改成功"

}

失败信息：

| status | msg                    |
| ------ | ---------------------- |
| -1     | 修改失败               |
| -2     | 修改失败，该考试已存在 |

 

**3****、删除一条考试****-----****管理员**

URL: 106.12.189.19/test/deleteTest

请求方式：POST

请求参数样例：

{

”Tid“ ： ”考试编号“            //主键，数据库自动生成

}

成功返回样例： 

{

"status" : 0,

"msg" : "删除成功"

}

失败信息：

| status | msg                        |
| ------ | -------------------------- |
| -1     | 删除失败，该考试编号不存在 |

 

**4****、查看所有考试报名入口****------****所有用户**

URL: 106.12.189.19/test/checktest

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询成功，所有考试报名入口如下",

"list" : [                //list是一个集合 List<Test> list，list可能为空

{

"Tid" : "考试编号"                   //主键，数据库自动生成

"Tname" : "考试名称",

"Turl" : "考试报名网址" 

"Tcollege" : "学院"

 

}

]

}

失败信息：

| status | msg            |
| ------ | -------------- |
| -1     | 无考试报名入口 |

 

 

 

 

 

 

 

**5****、根据学院查询所有考试报名入口------所有用户**

URL: 106.12.189.19/test/checkcollege

请求方式：POST

请求参数样例：无

成功返回样例：

{

"status" : 0,

"msg" : "查询成功，该学院下所有考试报名入口如下",

"list" : [                //list是一个集合 List<Test> list，list可能为空 

{

"Tid": "考试编号"                   //主键，数据库自动生成

"Tname" : "考试名称",

"Turl" : "考试报名网址" 

"Tcollege" : "学院"

}

]

}

失败信息：

| status | msg                    |
| ------ | ---------------------- |
| -1     | 该学院下无考试报名入口 |

 

 

# 七、个人中心

**---------****（个人想法，可以更改）**

 

**1****、所有涉及到维修人员的数据都放到个人中心（上边的交互数据），可以在个人中心中单独开设一个维修人员模块；然后维修人员模块再分：设备故障报备、失物招领通告、二手交易信息提供、各大考试报名途径；**

**--------****只有维修人员才可看到**

**2****、所有涉及到管理员得数据都放到个人中心（上边的交互数据），可以在个人中心中单独开设一个管理员模块；然后管理员模块再分：设备故障报备、失物招领通告、二手交易信息提供、各大考试报名途径；**

**--------****只有管理员可以看到**

**3****、所有涉及到用户修改和删除的数据信息都放到个人中心（上边的交互数据），可以在个人中心单独开一个普通用户模块，然后普通用户模块再分：设备故障报备、失物招领通告、二手交易信息提供、各大考试报名途径；**

**--------****所有用户都可以看到（包括维修人员和管理员）**

**先做这些，其他的后期补充**

**4****、修改个人信息也是在个人中心**

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 